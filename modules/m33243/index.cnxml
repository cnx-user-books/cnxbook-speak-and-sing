<document xmlns="http://cnx.rice.edu/cnxml">

<title>Speak and Sing - Conclusion</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m33243</md:content-id>
  <md:title>Speak and Sing - Conclusion</md:title>
  <md:abstract/>
  <md:uuid>858423b2-736a-42ce-a7d3-9dc300ffa81b</md:uuid>
</metadata>
<content>
  <section id="eip-639"><title>Results</title><para id="eip-677">After the signal has been processed by the various functions, we obtain a resultant signal (in the form of a data vector) which has been time-scaled and pitch-corrected. The resulting audio playback is (presumably) on-beat, in time with the song, and of the correct pitch. The individual results of each step's implementation are described individually below.</para><para id="eip-480"><title>Syllable Detection</title>The method of detecting sound types by energy and periodicity proved highly effective, with a decent rate of accuracy. The syllable identification by patterns seems to cover all cases effectively (assuming sound type detection worked). The input signal may need to be "doctored" a bit to remove the DC offset, amplify the signal, and remove excessive noise caused by noisy environments or electronic interference.</para><para id="eip-624"><title>Time Scaling</title>The WSOLA algorithm works very well for duration scaling. It is able to shorten or expand syllables dramatically without any discernible loss of information. Tests indicate that the signal could be stretched to ten times its original length without audio artifacting occurring. Assuming the syllable detection function was accurate, the time scaling function produces a signal timed exactly to the song.</para><para id="eip-669"><title>Pitch Correction</title>The PSOLA algorithm works as designed and introduces pitch correction. Given a relatively pitch-accurate input signal (such as a song or a sine wave), it will correct the input to the desired frequency. However, attempting to correct a dramatically different pitch (such as correcting the low timbre of a male voice speaking to a middle true C-note) causes a discernible gap between frequencies when listening to the signal. The result does not truly bend the pitch of the signal, but rather introduces harmonized distortion (hereafter dubbed "<link url="http://www.youtube.com/watch?v=R7yfISlGLNU">the T-Pain effect</link>").</para></section><section id="eip-352"><title>Limitations and areas for improvement</title><list id="eip-409" list-type="bulleted" bullet-style="open-circle"><title>Song Interpretation</title><item>No allowance is made for note slurs or variations within a syllable. Sustained words which vary in pitch are not currently supported. This would be relatively simple to implement by modifying the song vectors so that each syllable can contain multiple notes and durations.</item>
<item>Songs must currently be coded by hand by examining sheet music or "playing by ear". For this reason, song selection is limited to how many man-hours are put into song coding. In the future, a MIDI file decoder could automate this task. A more advanced approach would be to develop a pitch detector which identifies the vocal component of the song and then detects pitch.</item></list><list id="eip-344" list-type="bulleted" bullet-style="open-circle"><title>Syllable Detection</title><item>A relatively "clean" pre-processed signal produces best results. It would be possible to include DC offset removal, amplification, and finer noise detection in the MatLab function itself rather than rely on an outside program.</item>
<item>Soft consonants (L, R, Y, and others) do not produce the same contrasting energy and periodicity as hard consonants. Multiple syllables which are separated by a soft consonant which is not clearly enunciated or emphasized may be grouped together as one. Further research and a more robust understanding of this sound type should allow for changes which will improve detection.</item></list><list id="eip-225"><title>Pitch Correction</title><item>The PSOLA algorithm is well-suited for minor pitch corrections but cannot produce major pitch bends; attempts to do so result in the T-Pain effect. A more aggressive pitch correction method could produce tonal sound from any input but would compromise the sound information, leaving very little of the original speech intact.</item>
<item>The FAST-autocorrelation and PSOLA algorithms must use the same length and number of windowed segments. This creates a trade-off: autocorrelation can catch higher pitches and detect more accurately when using a longer window length, while PSOLA is able to make finer adjustments when given a larger number of smaller windows. If the window length is too small, autocorrelation may not detect any periods and would return zero frequency for that window. If the window length is too large, shorter sounds would not be pitch-corrected.</item>
<item>The repeated convolutions of the autocorrelation and PSOLA algorithms make this the most computationally expensive step in the process. Methods such as the FAST method of reducing the number of test cases have dramatically improved this time, but there is still room for improvement.</item></list></section><section id="eip-926"><title>Potential Applications</title><para id="eip-796">The Speak and Sing is a robust package which offers functionality and techniques not found in conventional autotuners. This all-in-one program and derivatives thereof show potential for applications in:</para><list id="eip-943"><item><emphasis>Music:</emphasis> the Speak and Sing could provide a multi-functional alternative in situations where pitch correction and autotuner distortion are desired. It can also provide tempo and timing corrections on a dynamic scale.</item>
<item><emphasis>Entertainment:</emphasis> the Speak and Sing would, at the very least, make for an interesting iPhone app of the same name.</item>
<item><emphasis>Communication:</emphasis> pitch correction and timescaling are important facets of voice synthesis and could be used to augment human-interface and accessibility programs.</item>
<item><emphasis>Speech analysis:</emphasis> the syllable detection algorithm can be used to parse recordings and perhaps find use in speech-to-text applications.</item></list></section><section id="eip-830"><title>In conclusion...</title><para id="conc1">
The Speak and Sing has served as an excellent demonstration of core digital signal processing techniques. Its development has served as a great learning experience for the team and has allowed each of us to flex our creative muscle.
</para>
<para id="conc2">While the "spoken words to full song" concept was not fully realized within this limited framework, the Speak and Sing is nonethelesss a functional, robust, and impressive program. It executes its syllable detection, time scaling, and pitch correction components correctly and produces an audible, tangible result from the input speech.
</para></section>
</content>

</document>